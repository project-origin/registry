{{- range $i, $e := until (int $.Values.transactionProcessor.replicas) }}
{{- $serverNumber := $i }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-deployment-{{ $serverNumber }}
  labels:
    app: {{ $.Release.Name }}-registry
    instance: {{ $.Release.Name }}-registry-{{ $serverNumber }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-registry
      instance: {{ $.Release.Name }}-registry-{{ $serverNumber }}
  template:
    metadata:
      name: {{ $.Release.Name }}-registry-{{ $serverNumber }}
      labels:
        app: {{ $.Release.Name }}-registry
        instance: {{ $.Release.Name }}-registry-{{ $serverNumber }}
    spec:
      serviceAccountName: {{ $.Release.Name }}-migration-waiter
      securityContext:
        runAsUser: 1654
        runAsNonRoot: true
      initContainers:
        - name: wait-for-migration
          image: {{ include "common.image" (dict "root" $ "image" $.Values.migrationWaiter.image) }}
          {{- include "common.limits" $.Values.migrationWaiter.resources | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          command:
            - /bin/sh
            - -c
            - |
              kubectl wait --for=condition=complete job/${JOB_NAME} --timeout=300s -n {{ $.Release.Namespace }}
          env:
            - name: JOB_NAME
              value: {{ include "migrate.job-name" $ }}
          volumeMounts:
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount

      containers:
        - name: registry
          image: {{ include "common.image" (dict "root" $ "image" $.Values.image) }}
          {{- include "common.limits" $.resources | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          args:
            - "--serve"
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: PERSISTENCE__TYPE
              value: postgresql
            {{- include "common.database.config" $ | nindent 12 }}
            {{- include "common.otlp.config" $.Values.otlp | nindent 12 }}

          # General configuration
            - name: RegistryName
              value: {{ $.Values.registryName | default $.Release.Name }}
            - name: ReturnComittedForFinalized
              value: {{ $.Values.returnComittedForFinalized | quote }}

          # TransactionProcessor configuration
            - name: TransactionProcessor__ServerNumber
              value: {{ $serverNumber | quote }}
            - name: TransactionProcessor__Servers
              value: {{ $.Values.transactionProcessor.replicas | quote }}
            - name: TransactionProcessor__Threads
              value: {{ $.Values.transactionProcessor.threads | quote }}
            - name: TransactionProcessor__Weight
              value: {{ $.Values.transactionProcessor.weight | quote }}

          # BlockFinalizer configuration
            - name: BlockFinalizer__Interval
              value: {{ $.Values.blockFinalizer.interval }}

          # Verifier configuration
          {{- range $.Values.verifiers }}
            - name: Verifiers__{{ .type }}
              value: {{ .url }}
          {{- end }}

          # immutableLog configuration
            - name: IMMUTABLELOG__TYPE
              value: {{ $.Values.immutableRecord.type }}
          {{- if eq $.Values.immutableRecord.type "concordium" }}
            - name: IMMUTABLELOG__CONCORDIUM__ADDRESS
              value: {{ required "concordium.rpcUr must be set if concordium enabled, example http://concordium.svc:20000" $.Values.immutableRecord.concordium.rpcUrl }}
            - name: IMMUTABLELOG__CONCORDIUM__AUTHENTICATIONTOKEN
              value: {{ required "concordium.rpcToken must be set if concordium enabled" $.Values.immutableRecord.concordium.rpcToken }}
            - name: IMMUTABLELOG__CONCORDIUM__ACCOUNTADDRESS
              {{- include "common.setValue" (list $.Values.immutableRecord.concordium.accountAddress ".immutableRecord.concordium.accountAddress") | nindent 14 }}
            - name: IMMUTABLELOG__CONCORDIUM__ACCOUNTKEY
              {{- include "common.setValue" (list $.Values.immutableRecord.concordium.accountKey ".immutableRecord.concordium.accountKey") | nindent 14 }}
          {{- end }}

          # rabbitmq
            - name: MessageBroker__Type
              value: RabbitMq
            - name: RabbitMq__Hostname
              {{- include "common.setValue" (list $.Values.rabbitmq.host ".rabbitmq.host") | nindent 14 }}
            - name: RabbitMq__AmqpPort
              {{- include "common.setValue" (list $.Values.rabbitmq.amqpPort ".rabbitmq.amqpPort") | nindent 14 }}
            - name: RabbitMq__HttpApiPort
              {{- include "common.setValue" (list $.Values.rabbitmq.httpPort ".rabbitmq.httpPort") | nindent 14 }}
            - name: RabbitMq__Username
              {{- include "common.setValue" (list $.Values.rabbitmq.username ".rabbitmq.username") | nindent 14 }}
            - name: RabbitMq__Password
              {{- include "common.setValue" (list $.Values.rabbitmq.password ".rabbitmq.password") | nindent 14 }}

          # cache configuration
          {{- if $.Values.redis.enabled }}
            - name: cache__type
              value: "Redis"
            - name: cache__redis__connectionString
              value: {{ $.Release.Name }}-redis-master
            # only set password if auth is enabled
            {{- if $.Values.redis.auth.enabled }}
            - name: cache__redis__password
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-redis
                  key: redis-password
            {{- end }}
          {{- else }}
            - name: cache__type
              value: "InMemory"
          {{- end }}
      volumes:
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
---
{{- end -}}
