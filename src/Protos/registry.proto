syntax = "proto3";

import "common.proto";

package ProjectOrigin.Registry.v1;

service TransactionProcessorService {
    rpc SendTransactions (SendTransactionsRequest) returns (SubmitTransactionResponse);
    rpc GetStreamTransactions (GetStreamTransactionsRequest) returns (GetStreamTransactionsResponse);
    rpc GetTransactionStatus(GetTransactionStatusRequest) returns (GetTransactionStatusResponse);
    rpc GetTransactionProof (GetTransactionProofRequest) returns (GetTransactionProofResponse);
}

message SendTransactionsRequest {
    // list of transactions to be processed
    repeated ProjectOrigin.Common.v1.Transaction transactions = 1;
}

message SubmitTransactionResponse {}

message GetStreamTransactionsRequest {
    // The id of the transaction to get stream of transactions from.
    ProjectOrigin.Common.v1.Uuid id = 1;
}

message GetStreamTransactionsResponse {
    // The stream of transactions.
    repeated ProjectOrigin.Common.v1.Transaction transactions = 1;
}

message GetTransactionStatusRequest {
    // The id of the transaction.
    ProjectOrigin.Common.v1.TransactionId id = 1;
}

message GetTransactionStatusResponse {
    // The state of the transaction.
    TransactionState status = 1;

    // The error message if the transaction is invalid.
    string message = 2;
}

enum TransactionState {
    UNKNOWN = 0;
    PENDING = 1;
    FAILED = 2;
    COMMITTED = 3;
}

message GetTransactionProofRequest {
    ProjectOrigin.Common.v1.TransactionId id = 1;
}

message GetTransactionProofResponse {
    ProjectOrigin.Common.v1.MerkleProof proof = 1;
}
