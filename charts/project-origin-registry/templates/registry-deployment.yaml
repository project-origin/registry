{{- if not (or (and (not (.Values.persistance.cloudNativePG.enabled)) .Values.persistance.inMemory.enabled) (and .Values.persistance.cloudNativePG.enabled (not (.Values.persistance.inMemory.enabled)))) }}
{{- fail "Exactly one of persistance.cloudNativePG.enabled or persistance.inMemory.enabled must be true" }}
{{- end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry-{{ .Release.Name }}-processor
  labels:
    app: registry-{{ .Release.Name }}
spec:
  replicas: {{ .Values.transactionProcessor.replicas }}
  selector:
    matchLabels:
      app: registry-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: registry-{{ .Release.Name }}
    spec:
      serviceAccountName: registry-migration-waiter
      initContainers:
        - name: wait-for-migration
          image: groundnuty/k8s-wait-for:v2.0
          args:
            - "job"
            - "po-registry-migrate-job-{{ .Values.image.tag | default .Chart.AppVersion | replace "." "-" }}"
      containers:
        - name: registry
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          args:
            - "--serve"
          env:
          # General configuration
            - name: RegistryName
              value: {{ .Values.registryName | default .Release.Name }}

          # TransactionProcessor configuration
            - name: TransactionProcessor__ServerNumber
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
            - name: TransactionProcessor__Servers
              value: {{ .Values.transactionProcessor.replicas | quote }}
            - name: TransactionProcessor__Threads
              value: {{ .Values.transactionProcessor.threads | quote }}
            - name: TransactionProcessor__Weight
              value: {{ .Values.transactionProcessor.weight | quote }}

          # BlockFinalizer configuration
            - name: BlockFinalizer__Interval
              value: {{ .Values.blockFinalizer.interval }}

          # Verifier configuration
          {{- range .Values.verifiers }}
            - name: Verifiers__{{ .type }}
              value: http://registry-{{ $.Release.Name }}-verifier-{{ .name }}:5000
          {{- end }}

          # immutableLog configuration
            - name: IMMUTABLELOG__TYPE
              value: {{ .Values.immutableRecord.type }}
          {{- if eq .Values.immutableRecord.type "concordium" }}
            - name: IMMUTABLELOG__CONCORDIUM__ADDRESS
              value: {{ .Values.immutableRecord.concordium.rpcUrl }}
            - name: IMMUTABLELOG__CONCORDIUM__AUTHENTICATIONTOKEN
              value: {{ .Values.immutableRecord.concordium.rpcToken }}
            - name: IMMUTABLELOG__CONCORDIUM__ACCOUNTADDRESS
              value: {{ required "When type is concordium, accountAddress must be set" .Values.immutableRecord.concordium.accountAddress }}
            - name: IMMUTABLELOG__CONCORDIUM__ACCOUNTKEY
              valueFrom:
                secretKeyRef:
                  name: {{ required "When type is concordium, accountKeySecret.name must be set" .Values.immutableRecord.concordium.accountKeySecret.name }}
                  key: {{ required "When type is concordium, accountKeySecret.key must be set" .Values.immutableRecord.concordium.accountKeySecret.key }}
          {{- end }}

          # rabbitmq - operator
          {{- if .Values.rabbitmq.operatorEnabled }}
            - name: RabbitMq__Hostname
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: host
            - name: RabbitMq__AmqpPort
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: port
            - name: RabbitMq__HttpApiPort
              value: {{ required "A valid messageBroker rabbitmq httpPort is required!" .Values.rabbitmq.httpPort | quote }}
            - name: RabbitMq__Username
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: username
            - name: RabbitMq__Password
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: password
          {{- else }}
            # rabbitmq - non-operator
            - name: MessageBroker__Type
              value: RabbitMq
            - name: RabbitMq__Host
              value: {{ required "A valid messageBroker rabbitmq host is required!" .Values.rabbitmq.host }}
            - name: RabbitMq__AmqpPort
              value: {{ required "A valid messageBroker rabbitmq amqpPort is required!" .Values.rabbitmq.amqpPort }}
            - name: RabbitMq__HttpApiPort
              value: {{ required "A valid messageBroker rabbitmq httpPort is required!" .Values.rabbitmq.httpPort }}
            - name: RabbitMq__Username
              value: {{ required "A valid messageBroker rabbitmq username is required!" .Values.rabbitmq.username }}
            - name: RabbitMq__Password
              value: {{ required "A valid messageBroker rabbitmq password is required!" .Values.rabbitmq.password }}
          {{- end }}

          # persistance - inMemory
          {{- if .Values.persistance.inMemory.enabled }}
            - name: PERSISTANCE__TYPE
              value: in_memory
          {{- end }}

          # persistance - cloudNativePG
          {{- if .Values.persistance.cloudNativePG.enabled }}
            - name: PERSISTANCE__TYPE
              value: postgresql
            - name: DB_HOST
              value: {{ .Values.persistance.cloudNativePG.name }}-rw
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: {{ .Values.persistance.cloudNativePG.database }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.persistance.cloudNativePG.name }}-app
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.persistance.cloudNativePG.name }}-app
                  key: password
            - name: PERSISTANCE__POSTGRESQL__CONNECTIONSTRING
              value: Host=$(DB_HOST); Port=$(DB_PORT); Database=$(DB_DATABASE); Username=$(DB_USERNAME); Password=$(DB_PASSWORD);
          {{- end }}

          # cache configuration
          {{- if .Values.redis.enabled }}
            - name: cache__type
              value: "Redis"
            - name: cache__redis__connectionString
              value: {{ .Release.Name }}-redis-master
            - name: cache__redis__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
          {{- else }}
            - name: cache__type
              value: "InMemory"
          {{- end }}
