{{- define "checkKey" -}}
{{- $value := index . 0 -}}
{{- $name := index . 1 -}}
{{- if (not (kindIs "map" $value)) -}}
value: {{ required (printf "The value for %s is not provided" $name) $value | quote }}
{{- else if and (hasKey $value "secretRef") (hasKey $value "configMapRef") }}
  {{ fail (printf "Both secretRef and configMapRef are defined for %s" $name) }}
{{- else if hasKey $value "secretRef" -}}
valueFrom:
  secretKeyRef:
    name: {{ required (printf "The value for %s.secretRef.name is not provided" $name) $value.secretRef.name | quote }}
    key: {{ required (printf "The value for %s.secretRef.key is not provided" $name) $value.secretRef.key | quote }}
{{- else if hasKey $value "configMapRef" -}}
valueFrom:
  configMapKeyRef:
    name: {{ required (printf "The value for %s.configMapRef.name is not provided" $name) $value.configMapRef.name | quote }}
    key: {{ required (printf "The value for %s.configMapRef.name is not provided" $name) $value.configMapRef.key | quote }}
{{- else -}}
  {{ fail (printf "The value for %s is not provided" $name) }}
{{- end }}
{{- end -}}

{{- define "database.config" -}}
# Database Configuration
- name: DB_HOST
  {{- include "checkKey" (list .Values.postgresql.host ".postgresql.host") | indent 2 }}
- name: DB_PORT
  {{- include "checkKey" (list .Values.postgresql.port ".postgresql.port") | indent 2}}
- name: DB_DATABASE
  {{- include "checkKey" (list .Values.postgresql.database ".postgresql.database") | indent 2 }}
- name: DB_USERNAME
  {{- include "checkKey" (list .Values.postgresql.username ".postgresql.username") | indent 2 }}
- name: DB_PASSWORD
  {{- include "checkKey" (list .Values.postgresql.password ".postgresql.password") | indent 2 }}
- name: ConnectionStrings__Database
  value: Host=$(DB_HOST); Port=$(DB_PORT); Database=$(DB_DATABASE); Username=$(DB_USERNAME); Password=$(DB_PASSWORD);
{{- end }}

