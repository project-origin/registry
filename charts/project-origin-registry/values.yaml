# This file contains the default values for the project-origin-registry chart.

# Enables one to override the name of the registry
registryName:

# image holds the configuration for the image to use for the registry
image:
  # repository is the repository to pull the image from
  repository: ghcr.io/project-origin/registry-server
  # tag is the tag to pull defaults to the chart version
  tag:

# transactionProcessor holds the configuration for the transaction processor
transactionProcessor:
  # replicas defines the number of transaction processor containers to run
  replicas: 3
  # threads defines the number of parallel threads to run per transaction processor
  threads: 5
  # defines the weight in the consistent hash ring used to determine which transaction processor to send a transaction to.
  weight: 10

# rabbitmq defines the rabbitmq configuration for rabbitmq, with rabbitmqOperator
rabbitmq:
  # operatorEnabled determines if the rabbitmq operator should be used to create the rabbitmq cluster, if true then other fields are ignored.
  operatorEnabled: true
  # host defines the host of the rabbitmq server in url format 'localhost'
  host:
  # amqpPort defines the port of the rabbitmq server
  amqpPort: 5672
  # httpPort defines the api management port of the rabbitmq server
  httpPort: 15672
  # username defines the username to use to connect to the rabbitmq server
  username:
  # password defines the password to use to connect to the rabbitmq server
  password:

# service holds the configuration for the service
service:
  # type is the type of service to create, allowed values are (ClusterIP | NodePort | LoadBalancer)
  type: ClusterIP
  # nodePort is the port to expose the service on if type is NodePort
  nodePort:

# blockFinalizer holds the configuration for the block finalizer
blockFinalizer:
  # interval is the interval at which to run the block finalizer, defaults to 30 seconds allowed values are between 00:00:01 and 01:00:00
  interval: 00:00:30

persistance:
  # cloudNativePG determines if the database is created as a cloud native postgresql instance
  cloudNativePG:

    # enabled determines if the cloud native postgresql instance is enabled
    enabled: false

    # name defines the name of the cloud native postgresql instance
    name: cnpg-registry-db

    # owner defines the owner of the database
    owner: app

    # database defines the name of the database to create
    database: registry-database

    # replicas defines the number of database instances to run
    replicas: 3

    # storage defines the storage configuration for the database
    size: 10Gi

  # inMemory determines if the database is created as an in memory database
  inMemory:

    # enabled determines if the in memory database is enabled
    enabled: false

# verifiers defines the local verifiers
verifiers:
    # name is the name of the verifier
  - name: electricity-v1
    type: project_origin.electricity.v1
    # image is the image to use for the verifier
    image:
      # repository is the repository to pull the image from
      repository: ghcr.io/project-origin/electricity-server
      # tag is the tag to pull
      tag: 0.3.0

    # issuers defines the currently accepted issuers for given areas.
    issuers: []
      # example
      # - area: DK1
      #   publicKey: Ay02vkc6FGV8FwtvVsmBO2p7UdbZIcFhvMGFB40D3DKX

    # Registries is a list of all the known registries in the network
    registries: []
      # example
      # - name: test
      #   address: http://test-registry:80

# immutableRecord holds the configuration for where and how the log is published.
immutableRecord:
  # type determines where the immutable log is send to, supported values are (log | concordium) if concordium is specified, then it must be configured below.
  type: log

  # concordium holds the configuration to contact and publish data on the network
  concordium:
    # rpcUrl are the url on which the local node is available.
    rpcUrl: http://po-concordium:10000
    # rpcToken is the token used to communicate with the node.
    rpcToken: rpcadmin
    # accountAddress must hold the address from which to use CCD
    accountAddress: ""
    # accountKeySecret is a reference to a kubernetes secret that holds the accountKey
    accountKeySecret:
      # name is the name of the kubernetes secret
      name: ""
      # key is the reference to the value within the secret
      key: ""

# redis holds the configuration for the redis subchart
redis:
  # enabled specifies if the redis subchart should be enabled or not
  enabled: true

# concordium holds the configuration for the concordium node
concordium:
  # enabled specified wether or not to run a local node
  enabled: false

  # network denotes which network the concordium node should run on, allowed values are (mainnet | testnet)
  network: ""

  # collector configures the collector that collects statistics from the node and publishes them to the network dashboard.
  collector:
    # enabled specifies if the collector should run or not.
    enabled: true
    # nodeName contains the name to report to the network dashboard. https://concordium.com/block-explorers/
    nodeName: ""
    # interval describes how often to collect the statistics from the node, in milliseconds
    interval: 5000

  # persistence holds the configuration for the persistent storage of the node
  persistence:
    # enabled specifies if the node should use persistent storage or not.
    enabled: true
    # name is the name of the persistent volume claim
    name: po-concordium-data
    # storageClass is the name of the storage class to use, if not specified the default storage class will be used.
    #storageClass:
    # accessMode is the access mode to use for the persistent volume claim, allowed values are (ReadWriteOnce | ReadWriteMany)
    accessMode: ReadWriteOnce
    # size is the size of the persistent volume claim
    size: 100Gi
