name: Build release artifacts

on:
  release:
    types: [published]

jobs:
  define-version:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.output-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        id: output-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  publish-hdkeys-nuget:
    name: Publish Hierarchical Deterministic Keys Nuget package
    needs:
      - define-version
    runs-on: ubuntu-20.04
    env:
      project: src/ProjectOrigin.HierarchicalDeterministicKeys

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.203"

      - name: Build
        shell: bash
        run: dotnet build --configuration Release ${{ env.project }}

      - name: Pack
        shell: bash
        run: dotnet pack --output build --configuration Release --no-restore -p:Version=${{ needs.define-version.outputs.version }} ${{ env.project }}

      - uses: actions/upload-artifact@v3
        with:
          path: build/*.nupkg

      - name: Publish
        shell: bash
        run: dotnet nuget push build/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-electricity-server-container:
    name: Publish Electricity Server container
    runs-on: ubuntu-22.04
    needs:
      - define-version
    env:
      name: electricity-server
      project: src/ProjectOrigin.Electricity.Server

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./src
          file: ${{ env.project }}/Dockerfile
          push: true
          tags: ghcr.io/project-origin/${{ env.name }}:${{ needs.define-version.outputs.version }}

  publish-registry-server-container:
    name: Publish Registry Server container
    runs-on: ubuntu-22.04
    needs:
      - define-version
    env:
      name: registry-server
      project: src/ProjectOrigin.Registry.Server

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./src
          file: ${{ env.project }}/Dockerfile
          push: true
          tags: ghcr.io/project-origin/${{ env.name }}:${{ needs.define-version.outputs.version }}

  publish-chart:
    name: Publish helm chart
    runs-on: ubuntu-22.04
    needs:
      - define-version
    env:
      CHART_FOLDER: charts/project-origin-registry
      HELM_REGISTRY_REPOSITORY: project-origin/helm-registry

    steps:
      - uses: actions/checkout@v3
        with:
          path: this

      - uses: actions/checkout@v3
        with:
          repository: ${{ env.HELM_REGISTRY_REPOSITORY }}
          path: helm-registry
          ssh-key: ${{ secrets.HELM_REGISTRY_TOKEN }}

      - name: Get chart name
        id: variables
        run: |
          echo "name=$(yq .name < this/${{ env.CHART_FOLDER }}/Chart.yaml)" >> $GITHUB_OUTPUT

      - name: Package and generate index
        run: |
          helm package this/${{ env.CHART_FOLDER }} --version ${{ needs.define-version.outputs.version }} --app-version "${{ needs.define-version.outputs.version }}" --destination helm-releases
          helm repo index helm-releases --merge helm-registry/index.yaml --url https://github.com/${{ github.repository }}/releases/download/v${{ needs.define-version.outputs.version }}/
          cp helm-releases/index.yaml helm-registry/index.yaml

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: "${{ contains( env.GITHUB_REF, '-rc.') }}"
          generate_release_notes: true
          files: helm-releases/${{ steps.variables.outputs.name }}-${{ needs.define-version.outputs.version }}.tgz

      - uses: actions/upload-artifact@v3
        with:
          path: helm-releases/${{ steps.variables.outputs.name }}-${{ needs.define-version.outputs.version }}.tgz

      - name: Commit index changes
        run: |
          cd helm-registry
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git add index.yaml
          git commit -m "Update index.yaml for ${{ steps.variables.outputs.name }}-${{ needs.define-version.outputs.version }}"
          git push
