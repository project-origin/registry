name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # support v1.2.3
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+' #supports alpha versions v1.2.3-alpha.4

jobs:

  define-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        id: output-version
        run: echo "::set-output name=version::${GITHUB_REF#refs/*/v}"

  publish-client-nuget:
    name: Publish Electricity Client Nuget Package
    needs:
      - define-version
    runs-on: ubuntu-20.04
    env:
      project: src/ProjectOrigin.Electricity.Client

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Setup .NET Core SDK 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0"

      - name: Install windows cross-compile
        run: |
          sudo apt-get update
          sudo apt-get install gcc-mingw-w64 -y
          rustup target add x86_64-pc-windows-gnu

      - name: Build
        shell: bash
        run: dotnet build --configuration Release ${{ env.project }}

      - name: Pack
        shell: bash
        run: dotnet pack --output build --configuration Release --no-restore -p:Version=${{ needs.define-version.outputs.version }} ${{ env.project }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: nuget-packages
          path: build/*.nupkg
          retention-days: 1

      - name: Publish
        shell: bash
        run: dotnet nuget push build/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json


  publish-server-container:
    name: Publish Electricity Server container
    runs-on: ubuntu-20.04
    needs:
      - define-version
    env:
      project: src/ProjectOrigin.Electricity.Server

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./src
          file: ./src/ProjectOrigin.Electricity.Server/Dockerfile
          push: true
          tags: ghcr.io/project-origin/electricity-server:${{ needs.define-version.outputs.version }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - publish-client-nuget
      - publish-server-container
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: "${{ contains( env.GITHUB_REF, '-alpha.') }}"
          generate_release_notes: true
          files: artifacts/**
